// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v6.30.1
// source: proto/get-products-details.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackages = "get_products_details";

export interface GetProductsDetailsRequest {
  productIds: string[];
}

export interface GetProductsDetailsResponse {
  productDetails: ProductDetails[];
}

export interface ProductDetails {
  productId: string;
  name: string;
  description: string;
  price: number;
  discountPercentage: number;
}

export const GET_PRODUCTS_DETAILS_PACKAGE_NAME = "get_products_details";

export interface GetProductsDetailsServiceClient {
  getProductsDetails(request: GetProductsDetailsRequest): Observable<GetProductsDetailsResponse>;
}

export interface GetProductsDetailsServiceController {
  getProductsDetails(
    request: GetProductsDetailsRequest,
  ): Promise<GetProductsDetailsResponse> | Observable<GetProductsDetailsResponse> | GetProductsDetailsResponse;
}

export function GetProductsDetailsServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getProductsDetails"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("GetProductsDetailsService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("GetProductsDetailsService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const GET_PRODUCTS_DETAILS_SERVICE_NAME = "GetProductsDetailsService";
